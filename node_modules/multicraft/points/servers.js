module.exports = api => {
  return {
    listServers: async () => {
      return await api.send("listServers");
    },
    
    findServers: async (field, value) => {
      return await api.send("findServers", `${field}${value}`, {field, value});
    },
    
    listServersByConnection: async (connection_id) => {
      return await api.send("listServersByConnection", connection_id, {connection_id});
    },
    
    listServersByOwner: async (user_id) => {
      return await api.send("listServersByOwner", user_id, {user_id});
    },
    
    getServerLog: async (id) => {
      return await api.send("getServerLog", id, {id});
    },
    
    clearServerLog: async (id) => {
      return await api.send("clearServerLog", id, {id});
    },
    
    getServerChat: async (id) => {
      return await api.send("getServerChat", id, {id});
    },
    
    clearServerChat: async (id) => {
      return await api.send("clearServerChat", id, {id});
    },
    
    getServer: async (id) => {
      return await api.send("getServer", id, {id});
    },
    
    getServerOwner: async (server_id) => {
      return await api.send("getServerOwner", server_id, {server_id});
    },
    
    getServerConfig: async (id) => {
      return await api.send("getServerConfig", id, {id});
    },
    
    getServerResources: async (id) => {
      return await api.send("getServerResources", id, {id});
    },
    
    getServerStatus: async (id, player_list = 0) => {
      return await api.send("getServerStatus", id+player_list, {id, player_list});
    },
    
    // Not functional
    updateServer: async (id, field, value) => {
      return await api.send("updateServer");
    },
    
    // Not functional
    createServerOn: async (daemon_id = 0, no_commands = 0, no_setup_script = 0) => {
      return await api.send("createServerOn");
    },
    
    // Not functional
    createServer: async (name = '', port = 0, base = '', players = 0, no_setup_script = 0) => {
      return await api.send("createServer");
    },
    
    suspendServer: async (id, stop=1) => {
      return await api.send("suspendServer", id+stop, {id, stop});
    },
    
    resumeServer: async (id, start=1) => {
      return await api.send("resumeServer", id+start, {id, start});
    },
    
    sendConsoleCommand: async (server_id, command) => {
      return await api.send("sendConsoleCommand", server_id + command, {server_id, command});
    },
    
    sendAllConsoleCommand: async (command) => {
      return await api.send("sendAllConsoleCommand", command, {command});
    },
    
    sendServerControl: async (id, command) => {
      return await api.send("sendServerControl", id + command, {id, command});
    },
    
    moveServer: async (server_id, daemon_id) => {
      return await api.send("moveServer", server_id + daemon_id, {server_id, daemon_id});
    },
    
    startServer: async (id) => {
      return await api.send("startServer", id, {id});
    },
    
    stopServer: async (id) => {
      return await api.send("stopServer", id, {id});
    },
    
    restartServer: async (id) => {
      return await api.send("restartServer", id, {id});
    },
    
    killServer: async (id) => {
      return await api.send("killServer", id, {id});
    },
    
    startAllServers: async () => {
      return await api.send("startAllServers");
    },
    
    stopAllServers: async () => {
      return await api.send("stopAllServers");
    },
    
    restartAllServers: async () => {
      return await api.send("restartAllServers");
    },
    
    killAllServers: async () => {
      return await api.send("killAllServers");
    },
    
    
  };
  
  
};
